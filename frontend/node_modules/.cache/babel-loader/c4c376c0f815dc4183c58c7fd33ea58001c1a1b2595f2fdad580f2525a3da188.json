{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portfolio\\\\LMS\\\\frontend\\\\src\\\\pages\\\\admin\\\\AddQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosInstance from '../../api/axiosConfig';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddQuiz = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please upload a file.');\n      return;\n    }\n    setIsUploading(true);\n    const reader = new FileReader();\n    reader.onload = async event => {\n      var _quizData$;\n      const data = new Uint8Array(event.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const quizData = XLSX.utils.sheet_to_json(worksheet);\n      const formattedQuiz = {\n        title: ((_quizData$ = quizData[0]) === null || _quizData$ === void 0 ? void 0 : _quizData$.QuizTitle) || 'Untitled Quiz',\n        questions: quizData.map(row => ({\n          questionText: row.Question,\n          options: [row.Option1, row.Option2, row.Option3, row.Option4],\n          correctAnswer: row.CorrectAnswer\n        }))\n      };\n      try {\n        await axiosInstance.post('/quizzes/upload', formattedQuiz);\n        alert('Quiz uploaded successfully!');\n        setFile(null);\n      } catch (error) {\n        console.error('Error uploading quiz:', error);\n        alert('Failed to upload quiz.');\n      } finally {\n        setIsUploading(false);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"quiz-title\",\n        children: \"Upload Complete Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFileUpload,\n        className: \"quiz-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload .xlsx File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".xlsx\",\n            onChange: handleFileChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isUploading,\n          children: isUploading ? 'Uploading...' : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                * {\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }\n\n                body {\n                    margin: 0;\n                    padding: 0;\n                }\n\n                .quiz-container {\n                    min-height: 100vh;\n                    background: linear-gradient(to right, #ff758c, #ff7eb3);\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n                }\n\n                .quiz-box {\n                    background-color: white;\n                    padding: 40px;\n                    border-radius: 12px;\n                    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n                    max-width: 500px;\n                    width: 100%;\n                }\n\n                .quiz-title {\n                    font-size: 24px;\n                    text-align: center;\n                    margin-bottom: 20px;\n                    color: #333;\n                }\n\n                .quiz-form {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 20px;\n                }\n\n                .quiz-form label {\n                    display: flex;\n                    flex-direction: column;\n                    font-size: 14px;\n                    color: #444;\n                }\n\n                .quiz-form input[type=\"file\"] {\n                    margin-top: 8px;\n                    font-size: 14px;\n                }\n\n                .quiz-form button {\n                    background-color: #ff758c;\n                    color: white;\n                    padding: 12px;\n                    border: none;\n                    border-radius: 8px;\n                    cursor: pointer;\n                    font-size: 16px;\n                    transition: background-color 0.3s ease;\n                }\n\n                .quiz-form button:disabled {\n                    background-color: #ccc;\n                    cursor: not-allowed;\n                }\n\n                .quiz-form button:hover:enabled {\n                    background-color: #e04a67;\n                }\n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(AddQuiz, \"+tBvX07pSjLNzdBVhcXC6Ud0JxY=\");\n_c = AddQuiz;\nexport default AddQuiz;\nvar _c;\n$RefreshReg$(_c, \"AddQuiz\");","map":{"version":3,"names":["React","useState","axiosInstance","XLSX","jsxDEV","_jsxDEV","AddQuiz","_s","file","setFile","isUploading","setIsUploading","handleFileChange","e","target","files","handleFileUpload","preventDefault","alert","reader","FileReader","onload","event","_quizData$","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","quizData","utils","sheet_to_json","formattedQuiz","title","QuizTitle","questions","map","row","questionText","Question","options","Option1","Option2","Option3","Option4","correctAnswer","CorrectAnswer","post","error","console","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","required","disabled","_c","$RefreshReg$"],"sources":["D:/Portfolio/LMS/frontend/src/pages/admin/AddQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axiosInstance from '../../api/axiosConfig';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AddQuiz = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleFileUpload = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) {\r\n            alert('Please upload a file.');\r\n            return;\r\n        }\r\n\r\n        setIsUploading(true);\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = async (event) => {\r\n            const data = new Uint8Array(event.target.result);\r\n            const workbook = XLSX.read(data, { type: 'array' });\r\n            const sheetName = workbook.SheetNames[0];\r\n            const worksheet = workbook.Sheets[sheetName];\r\n            const quizData = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n            const formattedQuiz = {\r\n                title: quizData[0]?.QuizTitle || 'Untitled Quiz',\r\n                questions: quizData.map((row) => ({\r\n                    questionText: row.Question,\r\n                    options: [row.Option1, row.Option2, row.Option3, row.Option4],\r\n                    correctAnswer: row.CorrectAnswer,\r\n                })),\r\n            };\r\n\r\n            try {\r\n                await axiosInstance.post('/quizzes/upload', formattedQuiz);\r\n                alert('Quiz uploaded successfully!');\r\n                setFile(null);\r\n            } catch (error) {\r\n                console.error('Error uploading quiz:', error);\r\n                alert('Failed to upload quiz.');\r\n            } finally {\r\n                setIsUploading(false);\r\n            }\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <div className=\"quiz-box\">\r\n                <h1 className=\"quiz-title\">Upload Complete Quiz</h1>\r\n                <form onSubmit={handleFileUpload} className=\"quiz-form\">\r\n                    <label>\r\n                        Upload .xlsx File:\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\".xlsx\"\r\n                            onChange={handleFileChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n\r\n                    <button type=\"submit\" disabled={isUploading}>\r\n                        {isUploading ? 'Uploading...' : 'Upload'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <style>{`\r\n                * {\r\n                    margin: 0;\r\n                    padding: 0;\r\n                    box-sizing: border-box;\r\n                }\r\n\r\n                body {\r\n                    margin: 0;\r\n                    padding: 0;\r\n                }\r\n\r\n                .quiz-container {\r\n                    min-height: 100vh;\r\n                    background: linear-gradient(to right, #ff758c, #ff7eb3);\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n                }\r\n\r\n                .quiz-box {\r\n                    background-color: white;\r\n                    padding: 40px;\r\n                    border-radius: 12px;\r\n                    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n                    max-width: 500px;\r\n                    width: 100%;\r\n                }\r\n\r\n                .quiz-title {\r\n                    font-size: 24px;\r\n                    text-align: center;\r\n                    margin-bottom: 20px;\r\n                    color: #333;\r\n                }\r\n\r\n                .quiz-form {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 20px;\r\n                }\r\n\r\n                .quiz-form label {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    font-size: 14px;\r\n                    color: #444;\r\n                }\r\n\r\n                .quiz-form input[type=\"file\"] {\r\n                    margin-top: 8px;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .quiz-form button {\r\n                    background-color: #ff758c;\r\n                    color: white;\r\n                    padding: 12px;\r\n                    border: none;\r\n                    border-radius: 8px;\r\n                    cursor: pointer;\r\n                    font-size: 16px;\r\n                    transition: background-color 0.3s ease;\r\n                }\r\n\r\n                .quiz-form button:disabled {\r\n                    background-color: #ccc;\r\n                    cursor: not-allowed;\r\n                }\r\n\r\n                .quiz-form button:hover:enabled {\r\n                    background-color: #e04a67;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddQuiz;\r\n"],"mappings":"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AAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENxD,OAAA;MAAAoD,QAAA,EAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAACtD,EAAA,CAlJID,OAAO;AAAA6D,EAAA,GAAP7D,OAAO;AAoJb,eAAeA,OAAO;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}